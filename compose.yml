version: '3.7'

services:

  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=username
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - '5672:5672'
      - '15672:15672'

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespw
      PGDATA: "/data/postgres"
    volumes:
        - ./postgre_init.sql:/docker-entrypoint-initdb.d/postgre_init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  cargoservice:
    restart: always
    image: emrahozturk/guavapay:cargoservice
    ports:
      - '8013:8013'
    environment:
      POSTGRES: postgres
      RABBITMQ: rabbitmq

  orderservice:
    restart: always
    image: emrahozturk/guavapay:orderservice
    ports:
      - '8012:8012'
    environment:
      POSTGRES: postgres
      RABBITMQ: rabbitmq

  authenticationservice:
    restart: always
    image: emrahozturk/guavapay:authenticationservice
    ports:
      - '8011:8011'
    environment:
      POSTGRES: postgres
      RABBITMQ: rabbitmq

  gateway:
    restart: always
    image: emrahozturk/guavapay:gateway
    networks:
      - gateway
    ports:
      - '8010:8010'
    environment:
      AUTHENTICATION_SERVICE: localhost
      ORDER_SERVICE: localhost
      CARGO_SERVICE: localhost

  client:
    container_name: client
    build: ./client
    networks:
      - gateway
    ports:
      - "4200:80"
    environment:
      GATEWAY: http://localhost:8010

networks:
  gateway: {}